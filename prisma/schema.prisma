generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL_AZURE") // uses a direct connection
}

model Users {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  phone     String?  @db.VarChar(64)
  photo     String?  @db.Text
  farms     Farms[]
  role      String   @default("user")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Farms {
  id        Int      @id @default(autoincrement())
  user_id   Int?
  name      String   @db.VarChar(255)
  address   String   @db.VarChar(255)
  photo     String?  @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      Users?   @relation(fields: [user_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  cattle    Cattle[]
}

model Cattle {
  id        Int      @id @default(autoincrement())
  farm_id   Int
  name      String   @db.VarChar(255)
  sex       Boolean  @db.Boolean
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  farm      Farms    @relation(fields: [farm_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  images    Images[]
  stats     Stats[]
}

model Images {
  id        Int      @id @default(autoincrement())
  cattle_id Int
  url       String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  cattle    Cattle   @relation(fields: [cattle_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Stats {
  id          Int       @id @default(autoincrement())
  cattle_id   Int
  age         Int      
  weight      Int      
  healthy     Boolean   @db.Boolean
  measuredAt  DateTime  @map("measured_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  cattle      Cattle    @relation(fields: [cattle_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

